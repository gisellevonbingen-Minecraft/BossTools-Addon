buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = "https://maven.minecraftforge.net" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
    }
}
apply plugin: "net.minecraftforge.gradle"
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: "eclipse"
apply plugin: "maven-publish"

version = "${mc_version}-${mod_version}"
group = "gisellevonbingen.beyond_earth_giselle_addon" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Beyond-Earth-Giselle-Addon"

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println("Java: " + System.getProperty("java.version") + " JVM: " + System.getProperty("java.vm.version") + "(" + System.getProperty("java.vendor") + ") Arch: " + System.getProperty("os.arch"))
minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the "official" mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: "official", version: "${mc_version}"

    // accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg") // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file("run")

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property "forge.logging.markers", "REGISTRIES"

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property "forge.logging.console.level", "debug"

            mods {
                beyond_earth_giselle_addon {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property "forge.logging.markers", "REGISTRIES"

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property "forge.logging.console.level", "debug"

            mods {
                beyond_earth_giselle_addon {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run")

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property "forge.logging.markers", "REGISTRIES"

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property "forge.logging.console.level", "debug"

            // Specify the Beyond-Earth-Addon_Giselle_Addon-1.18.1 for data generation, where to output the resulting resource, and where to look for existing resources.
            args "--mod", "beyond_earth_giselle_addon", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")

            mods {
                beyond_earth_giselle_addon {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir "src/generated/resources" }
repositories {
	maven {
		name "JEI"
		url "https://dvs1.progwml6.com/files/maven"
	}
    maven {
    	name "REI"
    	url "https://maven.shedaniel.me"
    }
    maven {
        url = "https://www.cursemaven.com"
    }
	maven {
		name "Local"
		url uri("${projectDir}/libs")
	}
}

dependencies {
    // Specify the version of Minecraft to use. If this is any group other than "net.minecraft", it is assumed
    // that the dep is a ForgeGradle "patcher" dependency, and its patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    // Beyond Earth
    implementation fg.deobf("net.mrscauthd:beyond_earth:${mc_version}-${beyond_earth_version}")

    // Recipe
    // REI
    // compileOnly fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:${rei_version}")
    // JEI
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")
    // JER
    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:${jer_file}")
    
    // Looking At
    // The One Probe
    implementation fg.deobf("curse.maven:the-one-probe-245211:${top_file}")
    // Jade
    implementation fg.deobf("curse.maven:jade-324717:${jade_file}")

    // Tinkers Construct
    implementation fg.deobf("slimeknights.mantle:Mantle:${mc_version}-${mantle_version}")
    implementation fg.deobf("slimeknights.tconstruct:TConstruct:${mc_version}-${tconstruct_version}")

    // Refined Storage
    compileOnly fg.deobf("curse.maven:refined-storage-243076:${refined_storage_file}")

    // JAOPCA
    compileOnly fg.deobf("thelm:jaopca:${mc_version}-${jaopca_version}:api")

    // Curios
    compileOnly fg.deobf("curse.maven:curios-309927:${curios_file}:api")
    runtimeOnly fg.deobf("curse.maven:curios-309927:${curios_file}")
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "beyond_earth_giselle_addon",
                "Specification-Vendor"    : "gisellevonbingen",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${project.mod_version}",
                "Implementation-Vendor"   : "gisellevonbingen",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy("reobfJar")
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn("reobfJar")

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
