buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.8'
group = 'gisellevonbingen.boss_tools_giselle_addon'
archivesBaseName = 'Space-BossTools_Giselle_Addon-1.16.5'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=boss_tools_giselle_addon.mixin.json"

            mods {
                boss_tools_giselle_addon {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=boss_tools_giselle_addon.mixin.json"

            mods {
                boss_tools_giselle_addon {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'boss_tools_giselle_addon', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                boss_tools_giselle_addon {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
		name "JEI"
		url "https://dvs1.progwml6.com/files/maven"
	}
	maven {
		name "Mekanism"
		url "https://modmaven.dev"
	}
    maven {
        url = "https://www.cursemaven.com"
    }
	maven {
		name "Local"
		url uri("${projectDir}/libs")
	}
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.21'
	
	// Mixin
    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
  
	// The One Probe
	implementation fg.deobf("curse.maven:the-one-probe-245211:3319255")
  
	// Hwyla
	implementation fg.deobf("curse.maven:hwyla-253449:3033593")
  
	// Space-BossTools
	implementation fg.deobf("net.mrscauthd:boss_tools:1.16.5-5.5")
	
	// JEI
    compileOnly fg.deobf("mezz.jei:jei-${mezz_jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mezz_jei_version}")
    
    // JER
    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:3545538")
	
	// Mekanism
    compileOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:additions")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:generators")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:tools")
	
    // Tinkers Contruct
    implementation fg.deobf("curse.maven:mantle-74924:3576386")
    implementation fg.deobf("curse.maven:tinkers-construct-74072:3576393")
    
    // Thermal Expansion
    implementation fg.deobf("curse.maven:cofh-core-69162:3407019")
    implementation fg.deobf("curse.maven:thermal-foundation-222880:3412300")
    implementation fg.deobf("curse.maven:thermal-expansion-69163:3404884")
    
	// Refined Storage
    compileOnly fg.deobf("curse.maven:refined-storage-243076:3400575")
    
	// JAOPCA
	compileOnly fg.deobf("thelm:jaopca:1.16.5-3.4.1.15:api")
	
	// Curios
    compileOnly fg.deobf("curse.maven:curios-309927:3456953:api")
    runtimeOnly fg.deobf("curse.maven:curios-309927:3456953")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "boss_tools_giselle_addon",
            "Specification-Vendor": "gisellevonbingen",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"gisellevonbingen",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs" : "boss_tools_giselle_addon.mixin.json"
        ])
    }
}

jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
