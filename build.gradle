buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net" }
        maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
    }
}
apply plugin: "net.minecraftforge.gradle"
apply plugin: "eclipse"
apply plugin: "maven-publish"

version = "${mc_version}-${mod_version}"
group = "gisellevonbingen.boss_tools_giselle_addon"
archivesBaseName = "Space-BossTools_Giselle_Addon"

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println("Java: " + System.getProperty("java.version") + " JVM: " + System.getProperty("java.vm.version") + "(" + System.getProperty("java.vendor") + ") Arch: " + System.getProperty("os.arch"))
minecraft {
    mappings channel: "official", version: "${mc_version}"

    runs {
        client {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            arg "-mixin.config=boss_tools_giselle_addon.mixin.json"

            mods {
                boss_tools_giselle_addon {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            arg "-mixin.config=boss_tools_giselle_addon.mixin.json"

            mods {
                boss_tools_giselle_addon {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            args "--mod", "boss_tools_giselle_addon", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")

            mods {
                boss_tools_giselle_addon {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir "src/generated/resources" }

repositories {
	maven {
		name "JEI"
		url "https://dvs1.progwml6.com/files/maven"
	}
	maven {
		name "Mekanism"
		url "https://modmaven.dev"
	}
    maven {
        url = "https://www.cursemaven.com"
    }
	maven {
		name "Local"
		url uri("${projectDir}/libs")
	}
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    // Mixin
    annotationProcessor "org.spongepowered:mixin:0.8:processor"

    // Space-BossTools
    implementation fg.deobf("net.mrscauthd:boss_tools:${mc_version}-${boss_tools_version}")

    // Recipe
    // REI
    // compileOnly fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:${rei_version}")
    // JEI
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")
    // JER
    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:${jer_file}")

    // Looking At
    // The One Probe
    implementation fg.deobf("curse.maven:the-one-probe-245211:${top_file}")
    // Hwyla
    implementation fg.deobf("curse.maven:hwyla-253449:${hwyla_file}")

    // Mekanism
    compileOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:additions")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:generators")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:tools")

    // Tinkers Construct
    implementation fg.deobf("slimeknights.mantle:Mantle:${mc_version}-${mantle_version}")
    implementation fg.deobf("slimeknights.tconstruct:TConstruct:${mc_version}-${tconstruct_version}")

    // Thermal Expansion
    implementation fg.deobf("curse.maven:cofh-core-69162:${cofh_core_file}")
    implementation fg.deobf("curse.maven:thermal-foundation-222880:${thermal_foundation_file}")
    implementation fg.deobf("curse.maven:thermal-expansion-69163:${thermal_expansion_file}")
    implementation fg.deobf("curse.maven:redstone-arsenal-70631:${redstone_arsenal_file}")

    // Refined Storage
    compileOnly fg.deobf("curse.maven:refined-storage-243076:${refined_storage_file}")

    // JAOPCA
    compileOnly fg.deobf("thelm:jaopca:${mc_version}-${jaopca_version}:api")

    // Curios
    compileOnly fg.deobf("curse.maven:curios-309927:${curios_file}:api")
    runtimeOnly fg.deobf("curse.maven:curios-309927:${curios_file}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "boss_tools_giselle_addon",
            "Specification-Vendor": "gisellevonbingen",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version"  : "${project.mod_version}",
            "Implementation-Vendor" :"gisellevonbingen",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs" : "boss_tools_giselle_addon.mixin.json"
        ])
    }
}

jar.finalizedBy("reobfJar") 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn("reobfJar")

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
